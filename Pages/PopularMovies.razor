@page "/popularmovies"
@inject TMDBClientService clientService
@inject NavigationManager NavManager

<PageTitle>Blazor Movie: Popular Movies</PageTitle>



<div class="container-xxl py-3">

    <div>
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            Popular Movies
        </h1>
    </div>

    <div class="d-flex flex-column flex-md-row justify-content-between my-3">

        <div class="row row-cols-2 row-cols-lg-4 row-cols-xl-5 g-3 justify-content-center justify-content-md-start">
            @if (Movies is not null)
            {
                @foreach (var movie in Movies.Results)
                {
                    <div class="col">
                        <MovieCard Movie="movie" />
                    </div>
                }
            }
            else
            {
                for (int i = 0; i < 10; i++)
                {
                    <div class="col">
                        <MovieCard />
                    </div>
                }
            }
        </div>

    </div>


    @if (Movies?.TotalPages > 1)
    {
        <Paginator CurrentPage="Movies.Page"
                   TotalPages="Movies.TotalPages > 500 ? 500 : Movies.TotalPages"
                   OnPageChange="GetPage" />
    }

</div>



@code {

    PopularMoviePagedResponse? Movies { get; set; }

    [SupplyParameterFromQuery(Name = "page")]
    public int PageNum { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        //await Task.Delay(TimeSpan.FromSeconds(5));
        Movies = await clientService.GetPopularMovies();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (PageNum < 1) PageNum = 1;
        else if (PageNum > 500) PageNum = 500;

        Movies = await clientService.GetPopularMovies(PageNum);
    }

    private void GetPage(int pageNum)
    {
        string newUrl = NavManager.GetUriWithQueryParameter("page", pageNum);
        NavManager.NavigateTo(newUrl);
    }
}
